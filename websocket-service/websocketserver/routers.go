/*
 * OCPP Device Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: v1.0.0
 * Contact: gr.szalay@gmail.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package websocketserver

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

var ocpp_url_path string = "/ocpp/{chargerId}"

func Index(w http.ResponseWriter, r *http.Request) {
	device_endpoint := "ws://" + "<SERVER_URL>" + "/ocpp/CHARGER_ID"
	fmt.Fprintf(w, "Please use the "+device_endpoint+" URL to connect your device.")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"ocpp",
		strings.ToUpper("Get"),
		ocpp_url_path,
		Ocpp,
	},
}
