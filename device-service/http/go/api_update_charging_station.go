/*
 * OCPP Device Service
 *
 * REST API to manage OCPP devices (e.g. Charging Stations)
 *
 * API version: v2.0.0
 * Contact: gr.szalay@gmail.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/gorilla/mux"
	"github.com/gregszalay/ocpp-csms-common-types/devices"
	"github.com/gregszalay/ocpp-csms/device-service/db"
	log "github.com/sirupsen/logrus"
)

func UpdateChargingStation(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")

	// get id from path parameter
	vars := mux.Vars(r)
	id, ok := vars["id"]
	if !ok {
		log.Error("failed to retrieve charging station id from URL path parameters")
	}

	log.Info("Attempting to update charging station with id ", id)

	body, err := ioutil.ReadAll(r.Body)
	if err != nil {
		log.Error("failed to read http request body: ", err)
		return
	}

	var updatedChargingStation devices.ChargingStation
	error := json.Unmarshal(body, &updatedChargingStation)
	if error != nil {
		log.Error("could not unmarshal updated charging station json: %s\n", error)
		return
	}
	log.Info("Charging station updated")

	if err := db.UpdateChargingStation(id, updatedChargingStation); err != nil {
		log.Error("Failed to update charging station ", id)
		w.WriteHeader(http.StatusInternalServerError)
		w.Write([]byte(fmt.Sprintf("Failed to update charging station %s", id)))
		return
	}
	w.WriteHeader(http.StatusOK)
	w.Write([]byte(fmt.Sprintf("Successfully updated charging station %s", id)))
}
